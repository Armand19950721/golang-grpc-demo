// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: Common.proto

package Common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BusinessType int32

const (
	BusinessType_BUSINESS_NONE BusinessType = 0
	BusinessType_COMPANY       BusinessType = 1
	BusinessType_PERSIONAL     BusinessType = 2
)

// Enum value maps for BusinessType.
var (
	BusinessType_name = map[int32]string{
		0: "BUSINESS_NONE",
		1: "COMPANY",
		2: "PERSIONAL",
	}
	BusinessType_value = map[string]int32{
		"BUSINESS_NONE": 0,
		"COMPANY":       1,
		"PERSIONAL":     2,
	}
)

func (x BusinessType) Enum() *BusinessType {
	p := new(BusinessType)
	*p = x
	return p
}

func (x BusinessType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BusinessType) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[0].Descriptor()
}

func (BusinessType) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[0]
}

func (x BusinessType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BusinessType.Descriptor instead.
func (BusinessType) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{0}
}

type EffectTool int32

const (
	EffectTool_EFFACT_TOOL_NONE EffectTool = 0
	EffectTool_BEAUTIFUL_SKIN   EffectTool = 1
)

// Enum value maps for EffectTool.
var (
	EffectTool_name = map[int32]string{
		0: "EFFACT_TOOL_NONE",
		1: "BEAUTIFUL_SKIN",
	}
	EffectTool_value = map[string]int32{
		"EFFACT_TOOL_NONE": 0,
		"BEAUTIFUL_SKIN":   1,
	}
)

func (x EffectTool) Enum() *EffectTool {
	p := new(EffectTool)
	*p = x
	return p
}

func (x EffectTool) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EffectTool) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[1].Descriptor()
}

func (EffectTool) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[1]
}

func (x EffectTool) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EffectTool.Descriptor instead.
func (EffectTool) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{1}
}

type ArInteractModule int32

const (
	ArInteractModule_AR_INTERACT_MODULE_NONE ArInteractModule = 0
)

// Enum value maps for ArInteractModule.
var (
	ArInteractModule_name = map[int32]string{
		0: "AR_INTERACT_MODULE_NONE",
	}
	ArInteractModule_value = map[string]int32{
		"AR_INTERACT_MODULE_NONE": 0,
	}
)

func (x ArInteractModule) Enum() *ArInteractModule {
	p := new(ArInteractModule)
	*p = x
	return p
}

func (x ArInteractModule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArInteractModule) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[2].Descriptor()
}

func (ArInteractModule) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[2]
}

func (x ArInteractModule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArInteractModule.Descriptor instead.
func (ArInteractModule) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{2}
}

type ArEditWindowModule int32

const (
	ArEditWindowModule_AR_EDIT_WINDOW_MODULE_NONE ArEditWindowModule = 0
	ArEditWindowModule_UI_EDIT                    ArEditWindowModule = 1
)

// Enum value maps for ArEditWindowModule.
var (
	ArEditWindowModule_name = map[int32]string{
		0: "AR_EDIT_WINDOW_MODULE_NONE",
		1: "UI_EDIT",
	}
	ArEditWindowModule_value = map[string]int32{
		"AR_EDIT_WINDOW_MODULE_NONE": 0,
		"UI_EDIT":                    1,
	}
)

func (x ArEditWindowModule) Enum() *ArEditWindowModule {
	p := new(ArEditWindowModule)
	*p = x
	return p
}

func (x ArEditWindowModule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArEditWindowModule) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[3].Descriptor()
}

func (ArEditWindowModule) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[3]
}

func (x ArEditWindowModule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArEditWindowModule.Descriptor instead.
func (ArEditWindowModule) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{3}
}

type ProgramState int32

const (
	ProgramState_PROGRAM_STATE_NONE ProgramState = 0
	ProgramState_OFF_SALE           ProgramState = 1
	ProgramState_ON_SALE            ProgramState = 2
)

// Enum value maps for ProgramState.
var (
	ProgramState_name = map[int32]string{
		0: "PROGRAM_STATE_NONE",
		1: "OFF_SALE",
		2: "ON_SALE",
	}
	ProgramState_value = map[string]int32{
		"PROGRAM_STATE_NONE": 0,
		"OFF_SALE":           1,
		"ON_SALE":            2,
	}
)

func (x ProgramState) Enum() *ProgramState {
	p := new(ProgramState)
	*p = x
	return p
}

func (x ProgramState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProgramState) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[4].Descriptor()
}

func (ProgramState) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[4]
}

func (x ProgramState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProgramState.Descriptor instead.
func (ProgramState) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{4}
}

type ErrorCodes int32

const (
	ErrorCodes_ErrorCodes_NONE ErrorCodes = 0
	// 權限
	ErrorCodes_SUCCESS               ErrorCodes = 10000
	ErrorCodes_INVAILD_TOKEN         ErrorCodes = 10001
	ErrorCodes_PERMISSION_DENIED     ErrorCodes = 10002
	ErrorCodes_PROGRAM_NOT_SUPPORT   ErrorCodes = 10003
	ErrorCodes_CONTACT_LIMIT_REACHED ErrorCodes = 10004
	ErrorCodes_SEATS_LIMIT_REACHED   ErrorCodes = 10005
	// API
	ErrorCodes_INVAILD_PARAM  ErrorCodes = 20001
	ErrorCodes_UNKNOWN_ERROR  ErrorCodes = 20002
	ErrorCodes_REPEATED_ERROR ErrorCodes = 20003
	ErrorCodes_DATA_NOT_FOUND ErrorCodes = 20004
	// 登入
	ErrorCodes_LOGIN_CHECK_ID_FAIL ErrorCodes = 30001
	// File
	ErrorCodes_UPLOAD_FILE_SIZE_INVALID     ErrorCodes = 40001
	ErrorCodes_UPLOAD_FILE_TYPE_NOT_SUPPORT ErrorCodes = 40002
	// 信件
	ErrorCodes_MAIL_STATE_EXPIRE_ERROR ErrorCodes = 50001
	ErrorCodes_USER_EMAIL_INVAILD      ErrorCodes = 50002
	ErrorCodes_MAIL_HEAVY_FREQUENTLY   ErrorCodes = 50003
	ErrorCodes_REACH_DAILY_MAIL_LIMIT  ErrorCodes = 50004
	ErrorCodes_EMAIL_IS_VALIDATED      ErrorCodes = 50005
)

// Enum value maps for ErrorCodes.
var (
	ErrorCodes_name = map[int32]string{
		0:     "ErrorCodes_NONE",
		10000: "SUCCESS",
		10001: "INVAILD_TOKEN",
		10002: "PERMISSION_DENIED",
		10003: "PROGRAM_NOT_SUPPORT",
		10004: "CONTACT_LIMIT_REACHED",
		10005: "SEATS_LIMIT_REACHED",
		20001: "INVAILD_PARAM",
		20002: "UNKNOWN_ERROR",
		20003: "REPEATED_ERROR",
		20004: "DATA_NOT_FOUND",
		30001: "LOGIN_CHECK_ID_FAIL",
		40001: "UPLOAD_FILE_SIZE_INVALID",
		40002: "UPLOAD_FILE_TYPE_NOT_SUPPORT",
		50001: "MAIL_STATE_EXPIRE_ERROR",
		50002: "USER_EMAIL_INVAILD",
		50003: "MAIL_HEAVY_FREQUENTLY",
		50004: "REACH_DAILY_MAIL_LIMIT",
		50005: "EMAIL_IS_VALIDATED",
	}
	ErrorCodes_value = map[string]int32{
		"ErrorCodes_NONE":              0,
		"SUCCESS":                      10000,
		"INVAILD_TOKEN":                10001,
		"PERMISSION_DENIED":            10002,
		"PROGRAM_NOT_SUPPORT":          10003,
		"CONTACT_LIMIT_REACHED":        10004,
		"SEATS_LIMIT_REACHED":          10005,
		"INVAILD_PARAM":                20001,
		"UNKNOWN_ERROR":                20002,
		"REPEATED_ERROR":               20003,
		"DATA_NOT_FOUND":               20004,
		"LOGIN_CHECK_ID_FAIL":          30001,
		"UPLOAD_FILE_SIZE_INVALID":     40001,
		"UPLOAD_FILE_TYPE_NOT_SUPPORT": 40002,
		"MAIL_STATE_EXPIRE_ERROR":      50001,
		"USER_EMAIL_INVAILD":           50002,
		"MAIL_HEAVY_FREQUENTLY":        50003,
		"REACH_DAILY_MAIL_LIMIT":       50004,
		"EMAIL_IS_VALIDATED":           50005,
	}
)

func (x ErrorCodes) Enum() *ErrorCodes {
	p := new(ErrorCodes)
	*p = x
	return p
}

func (x ErrorCodes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCodes) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[5].Descriptor()
}

func (ErrorCodes) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[5]
}

func (x ErrorCodes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCodes.Descriptor instead.
func (ErrorCodes) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{5}
}

type MailType int32

const (
	MailType_MAIL_TYPE_NONE  MailType = 0
	MailType_MAIL_TYPE_ADMIN MailType = 1
	MailType_MAIL_TYPE_CHILD MailType = 2
)

// Enum value maps for MailType.
var (
	MailType_name = map[int32]string{
		0: "MAIL_TYPE_NONE",
		1: "MAIL_TYPE_ADMIN",
		2: "MAIL_TYPE_CHILD",
	}
	MailType_value = map[string]int32{
		"MAIL_TYPE_NONE":  0,
		"MAIL_TYPE_ADMIN": 1,
		"MAIL_TYPE_CHILD": 2,
	}
)

func (x MailType) Enum() *MailType {
	p := new(MailType)
	*p = x
	return p
}

func (x MailType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailType) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[6].Descriptor()
}

func (MailType) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[6]
}

func (x MailType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailType.Descriptor instead.
func (MailType) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{6}
}

type MailState int32

const (
	MailState_MAIL_STATE_NONE    MailState = 0
	MailState_MAIL_STATE_INVITED MailState = 1
	MailState_MAIL_STATE_EXPIRE  MailState = 2
	MailState_MAIL_STATE_CANCEL  MailState = 3
	MailState_MAIL_STATE_SUCCESS MailState = 4
)

// Enum value maps for MailState.
var (
	MailState_name = map[int32]string{
		0: "MAIL_STATE_NONE",
		1: "MAIL_STATE_INVITED",
		2: "MAIL_STATE_EXPIRE",
		3: "MAIL_STATE_CANCEL",
		4: "MAIL_STATE_SUCCESS",
	}
	MailState_value = map[string]int32{
		"MAIL_STATE_NONE":    0,
		"MAIL_STATE_INVITED": 1,
		"MAIL_STATE_EXPIRE":  2,
		"MAIL_STATE_CANCEL":  3,
		"MAIL_STATE_SUCCESS": 4,
	}
)

func (x MailState) Enum() *MailState {
	p := new(MailState)
	*p = x
	return p
}

func (x MailState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailState) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[7].Descriptor()
}

func (MailState) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[7]
}

func (x MailState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailState.Descriptor instead.
func (MailState) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{7}
}

type UploadFileType int32

const (
	UploadFileType_UPLOAD_FILE_TYPE_NONE UploadFileType = 0
	UploadFileType_IMAGE                 UploadFileType = 1
	UploadFileType_THREE_D_FILE          UploadFileType = 2
)

// Enum value maps for UploadFileType.
var (
	UploadFileType_name = map[int32]string{
		0: "UPLOAD_FILE_TYPE_NONE",
		1: "IMAGE",
		2: "THREE_D_FILE",
	}
	UploadFileType_value = map[string]int32{
		"UPLOAD_FILE_TYPE_NONE": 0,
		"IMAGE":                 1,
		"THREE_D_FILE":          2,
	}
)

func (x UploadFileType) Enum() *UploadFileType {
	p := new(UploadFileType)
	*p = x
	return p
}

func (x UploadFileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadFileType) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[8].Descriptor()
}

func (UploadFileType) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[8]
}

func (x UploadFileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadFileType.Descriptor instead.
func (UploadFileType) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{8}
}

type CommonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonRequest) Reset() {
	*x = CommonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRequest) ProtoMessage() {}

func (x *CommonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRequest.ProtoReflect.Descriptor instead.
func (*CommonRequest) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{0}
}

type CommonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonReply) Reset() {
	*x = CommonReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonReply) ProtoMessage() {}

func (x *CommonReply) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonReply.ProtoReflect.Descriptor instead.
func (*CommonReply) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{1}
}

type Transform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *Vector `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Rotation *Vector `protobuf:"bytes,2,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Scale    *Vector `protobuf:"bytes,3,opt,name=scale,proto3" json:"scale,omitempty"`
}

func (x *Transform) Reset() {
	*x = Transform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transform) ProtoMessage() {}

func (x *Transform) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transform.ProtoReflect.Descriptor instead.
func (*Transform) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{2}
}

func (x *Transform) GetPosition() *Vector {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Transform) GetRotation() *Vector {
	if x != nil {
		return x.Rotation
	}
	return nil
}

func (x *Transform) GetScale() *Vector {
	if x != nil {
		return x.Scale
	}
	return nil
}

type Vector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X string `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y string `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	Z string `protobuf:"bytes,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Vector) Reset() {
	*x = Vector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{3}
}

func (x *Vector) GetX() string {
	if x != nil {
		return x.X
	}
	return ""
}

func (x *Vector) GetY() string {
	if x != nil {
		return x.Y
	}
	return ""
}

func (x *Vector) GetZ() string {
	if x != nil {
		return x.Z
	}
	return ""
}

type PageInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageItemCount  int32 `protobuf:"varint,1,opt,name=page_item_count,json=pageItemCount,proto3" json:"page_item_count,omitempty"`
	CurrentPageNum int32 `protobuf:"varint,2,opt,name=current_page_num,json=currentPageNum,proto3" json:"current_page_num,omitempty"`
}

func (x *PageInfoRequest) Reset() {
	*x = PageInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfoRequest) ProtoMessage() {}

func (x *PageInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfoRequest.ProtoReflect.Descriptor instead.
func (*PageInfoRequest) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{4}
}

func (x *PageInfoRequest) GetPageItemCount() int32 {
	if x != nil {
		return x.PageItemCount
	}
	return 0
}

func (x *PageInfoRequest) GetCurrentPageNum() int32 {
	if x != nil {
		return x.CurrentPageNum
	}
	return 0
}

type PageInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *PageInfoReply) Reset() {
	*x = PageInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfoReply) ProtoMessage() {}

func (x *PageInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfoReply.ProtoReflect.Descriptor instead.
func (*PageInfoReply) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{5}
}

func (x *PageInfoReply) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ErrorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ErrorCodes `protobuf:"varint,1,opt,name=code,proto3,enum=Common.ErrorCodes" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorReply) Reset() {
	*x = ErrorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorReply) ProtoMessage() {}

func (x *ErrorReply) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorReply.ProtoReflect.Descriptor instead.
func (*ErrorReply) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{6}
}

func (x *ErrorReply) GetCode() ErrorCodes {
	if x != nil {
		return x.Code
	}
	return ErrorCodes_ErrorCodes_NONE
}

func (x *ErrorReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ErrorReplyGin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     ErrorCodes `protobuf:"varint,1,opt,name=code,proto3,enum=Common.ErrorCodes" json:"code,omitempty"`
	Message  string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	FileName string     `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FilePath string     `protobuf:"bytes,4,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
}

func (x *ErrorReplyGin) Reset() {
	*x = ErrorReplyGin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorReplyGin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorReplyGin) ProtoMessage() {}

func (x *ErrorReplyGin) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorReplyGin.ProtoReflect.Descriptor instead.
func (*ErrorReplyGin) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{7}
}

func (x *ErrorReplyGin) GetCode() ErrorCodes {
	if x != nil {
		return x.Code
	}
	return ErrorCodes_ErrorCodes_NONE
}

func (x *ErrorReplyGin) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorReplyGin) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ErrorReplyGin) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

var File_Common_proto protoreflect.FileDescriptor

var file_Common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x22, 0x32, 0x0a, 0x06, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x01, 0x7a, 0x22, 0x63, 0x0a, 0x0f, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x30, 0x0a, 0x0d, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4e, 0x0a,
	0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8b, 0x01,
	0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x47, 0x69, 0x6e, 0x12,
	0x26, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x2a, 0x3d, 0x0a, 0x0c, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x42,
	0x55, 0x53, 0x49, 0x4e, 0x45, 0x53, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50,
	0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x10, 0x02, 0x2a, 0x36, 0x0a, 0x0a, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x46, 0x46, 0x41,
	0x43, 0x54, 0x5f, 0x54, 0x4f, 0x4f, 0x4c, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x42, 0x45, 0x41, 0x55, 0x54, 0x49, 0x46, 0x55, 0x4c, 0x5f, 0x53, 0x4b, 0x49, 0x4e,
	0x10, 0x01, 0x2a, 0x2f, 0x0a, 0x10, 0x41, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x52, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x2a, 0x41, 0x0a, 0x12, 0x41, 0x72, 0x45, 0x64, 0x69, 0x74, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x52, 0x5f,
	0x45, 0x44, 0x49, 0x54, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x5f, 0x4d, 0x4f, 0x44, 0x55,
	0x4c, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x49, 0x5f,
	0x45, 0x44, 0x49, 0x54, 0x10, 0x01, 0x2a, 0x41, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x41,
	0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x4f, 0x46, 0x46, 0x5f, 0x53, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x2a, 0xee, 0x03, 0x0a, 0x0a, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x90, 0x4e, 0x12, 0x12, 0x0a, 0x0d, 0x49,
	0x4e, 0x56, 0x41, 0x49, 0x4c, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x91, 0x4e, 0x12,
	0x16, 0x0a, 0x11, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45,
	0x4e, 0x49, 0x45, 0x44, 0x10, 0x92, 0x4e, 0x12, 0x18, 0x0a, 0x13, 0x50, 0x52, 0x4f, 0x47, 0x52,
	0x41, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x93,
	0x4e, 0x12, 0x1a, 0x0a, 0x15, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x5f, 0x4c, 0x49, 0x4d,
	0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x94, 0x4e, 0x12, 0x18, 0x0a,
	0x13, 0x53, 0x45, 0x41, 0x54, 0x53, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x41,
	0x43, 0x48, 0x45, 0x44, 0x10, 0x95, 0x4e, 0x12, 0x13, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x49,
	0x4c, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x10, 0xa1, 0x9c, 0x01, 0x12, 0x13, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xa2, 0x9c,
	0x01, 0x12, 0x14, 0x0a, 0x0e, 0x52, 0x45, 0x50, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0xa3, 0x9c, 0x01, 0x12, 0x14, 0x0a, 0x0e, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xa4, 0x9c, 0x01, 0x12, 0x19, 0x0a,
	0x13, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x49, 0x44, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x10, 0xb1, 0xea, 0x01, 0x12, 0x1e, 0x0a, 0x18, 0x55, 0x50, 0x4c, 0x4f,
	0x41, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0xc1, 0xb8, 0x02, 0x12, 0x22, 0x0a, 0x1c, 0x55, 0x50, 0x4c, 0x4f,
	0x41, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0xc2, 0xb8, 0x02, 0x12, 0x1d, 0x0a, 0x17,
	0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xd1, 0x86, 0x03, 0x12, 0x18, 0x0a, 0x12, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x49, 0x4c,
	0x44, 0x10, 0xd2, 0x86, 0x03, 0x12, 0x1b, 0x0a, 0x15, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x48, 0x45,
	0x41, 0x56, 0x59, 0x5f, 0x46, 0x52, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x54, 0x4c, 0x59, 0x10, 0xd3,
	0x86, 0x03, 0x12, 0x1c, 0x0a, 0x16, 0x52, 0x45, 0x41, 0x43, 0x48, 0x5f, 0x44, 0x41, 0x49, 0x4c,
	0x59, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0xd4, 0x86, 0x03,
	0x12, 0x18, 0x0a, 0x12, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x49, 0x53, 0x5f, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0xd5, 0x86, 0x03, 0x2a, 0x48, 0x0a, 0x08, 0x4d, 0x61,
	0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x41,
	0x49, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x49,
	0x4c, 0x44, 0x10, 0x02, 0x2a, 0x7e, 0x0a, 0x09, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x58, 0x50,
	0x49, 0x52, 0x45, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12,
	0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x04, 0x2a, 0x48, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44,
	0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x54, 0x48, 0x52, 0x45, 0x45, 0x5f, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x02, 0x42, 0x1d,
	0x5a, 0x1b, 0x4d, 0x45, 0x54, 0x41, 0x52, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Common_proto_rawDescOnce sync.Once
	file_Common_proto_rawDescData = file_Common_proto_rawDesc
)

func file_Common_proto_rawDescGZIP() []byte {
	file_Common_proto_rawDescOnce.Do(func() {
		file_Common_proto_rawDescData = protoimpl.X.CompressGZIP(file_Common_proto_rawDescData)
	})
	return file_Common_proto_rawDescData
}

var file_Common_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_Common_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_Common_proto_goTypes = []interface{}{
	(BusinessType)(0),       // 0: Common.BusinessType
	(EffectTool)(0),         // 1: Common.EffectTool
	(ArInteractModule)(0),   // 2: Common.ArInteractModule
	(ArEditWindowModule)(0), // 3: Common.ArEditWindowModule
	(ProgramState)(0),       // 4: Common.ProgramState
	(ErrorCodes)(0),         // 5: Common.ErrorCodes
	(MailType)(0),           // 6: Common.MailType
	(MailState)(0),          // 7: Common.MailState
	(UploadFileType)(0),     // 8: Common.UploadFileType
	(*CommonRequest)(nil),   // 9: Common.CommonRequest
	(*CommonReply)(nil),     // 10: Common.CommonReply
	(*Transform)(nil),       // 11: Common.Transform
	(*Vector)(nil),          // 12: Common.Vector
	(*PageInfoRequest)(nil), // 13: Common.PageInfoRequest
	(*PageInfoReply)(nil),   // 14: Common.PageInfoReply
	(*ErrorReply)(nil),      // 15: Common.ErrorReply
	(*ErrorReplyGin)(nil),   // 16: Common.ErrorReplyGin
}
var file_Common_proto_depIdxs = []int32{
	12, // 0: Common.Transform.position:type_name -> Common.Vector
	12, // 1: Common.Transform.rotation:type_name -> Common.Vector
	12, // 2: Common.Transform.scale:type_name -> Common.Vector
	5,  // 3: Common.ErrorReply.code:type_name -> Common.ErrorCodes
	5,  // 4: Common.ErrorReplyGin.code:type_name -> Common.ErrorCodes
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_Common_proto_init() }
func file_Common_proto_init() {
	if File_Common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorReplyGin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Common_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Common_proto_goTypes,
		DependencyIndexes: file_Common_proto_depIdxs,
		EnumInfos:         file_Common_proto_enumTypes,
		MessageInfos:      file_Common_proto_msgTypes,
	}.Build()
	File_Common_proto = out.File
	file_Common_proto_rawDesc = nil
	file_Common_proto_goTypes = nil
	file_Common_proto_depIdxs = nil
}
