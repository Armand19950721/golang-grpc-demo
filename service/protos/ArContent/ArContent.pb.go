// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: ArContent.proto

package ArContent

import (
	Common "service/protos/Common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArContentCollet int32

const (
	ArContentCollet_CATEGORY ArContentCollet = 0
	ArContentCollet_TYPE     ArContentCollet = 1
	ArContentCollet_TEMPLATE ArContentCollet = 2
)

// Enum value maps for ArContentCollet.
var (
	ArContentCollet_name = map[int32]string{
		0: "CATEGORY",
		1: "TYPE",
		2: "TEMPLATE",
	}
	ArContentCollet_value = map[string]int32{
		"CATEGORY": 0,
		"TYPE":     1,
		"TEMPLATE": 2,
	}
)

func (x ArContentCollet) Enum() *ArContentCollet {
	p := new(ArContentCollet)
	*p = x
	return p
}

func (x ArContentCollet) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArContentCollet) Descriptor() protoreflect.EnumDescriptor {
	return file_ArContent_proto_enumTypes[0].Descriptor()
}

func (ArContentCollet) Type() protoreflect.EnumType {
	return &file_ArContent_proto_enumTypes[0]
}

func (x ArContentCollet) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArContentCollet.Descriptor instead.
func (ArContentCollet) EnumDescriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{0}
}

type ArContentCategoryEnum int32

const (
	ArContentCategoryEnum_CATRGORY_ALL  ArContentCategoryEnum = 0
	ArContentCategoryEnum_CATRGORY_HEAD ArContentCategoryEnum = 1
	ArContentCategoryEnum_CATRGORY_FACE ArContentCategoryEnum = 2
)

// Enum value maps for ArContentCategoryEnum.
var (
	ArContentCategoryEnum_name = map[int32]string{
		0: "CATRGORY_ALL",
		1: "CATRGORY_HEAD",
		2: "CATRGORY_FACE",
	}
	ArContentCategoryEnum_value = map[string]int32{
		"CATRGORY_ALL":  0,
		"CATRGORY_HEAD": 1,
		"CATRGORY_FACE": 2,
	}
)

func (x ArContentCategoryEnum) Enum() *ArContentCategoryEnum {
	p := new(ArContentCategoryEnum)
	*p = x
	return p
}

func (x ArContentCategoryEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArContentCategoryEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_ArContent_proto_enumTypes[1].Descriptor()
}

func (ArContentCategoryEnum) Type() protoreflect.EnumType {
	return &file_ArContent_proto_enumTypes[1]
}

func (x ArContentCategoryEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArContentCategoryEnum.Descriptor instead.
func (ArContentCategoryEnum) EnumDescriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{1}
}

type ArContentTypeEnum int32

const (
	ArContentTypeEnum_TYPE_ALL     ArContentTypeEnum = 0
	ArContentTypeEnum_TYPE_EAR     ArContentTypeEnum = 1
	ArContentTypeEnum_TYPE_HAIR    ArContentTypeEnum = 2
	ArContentTypeEnum_TYPE_GLASSES ArContentTypeEnum = 3
	ArContentTypeEnum_TYPE_LENS    ArContentTypeEnum = 4
)

// Enum value maps for ArContentTypeEnum.
var (
	ArContentTypeEnum_name = map[int32]string{
		0: "TYPE_ALL",
		1: "TYPE_EAR",
		2: "TYPE_HAIR",
		3: "TYPE_GLASSES",
		4: "TYPE_LENS",
	}
	ArContentTypeEnum_value = map[string]int32{
		"TYPE_ALL":     0,
		"TYPE_EAR":     1,
		"TYPE_HAIR":    2,
		"TYPE_GLASSES": 3,
		"TYPE_LENS":    4,
	}
)

func (x ArContentTypeEnum) Enum() *ArContentTypeEnum {
	p := new(ArContentTypeEnum)
	*p = x
	return p
}

func (x ArContentTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArContentTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_ArContent_proto_enumTypes[2].Descriptor()
}

func (ArContentTypeEnum) Type() protoreflect.EnumType {
	return &file_ArContent_proto_enumTypes[2]
}

func (x ArContentTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArContentTypeEnum.Descriptor instead.
func (ArContentTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{2}
}

type ArContentTemplateEnum int32

const (
	ArContentTemplateEnum_TEMPLATE_ALL            ArContentTemplateEnum = 0
	ArContentTemplateEnum_TEMPLATE_EARRING        ArContentTemplateEnum = 1
	ArContentTemplateEnum_TEMPLATE_GLASSES        ArContentTemplateEnum = 2
	ArContentTemplateEnum_TEMPLATE_CONTECT_LENSES ArContentTemplateEnum = 3
	ArContentTemplateEnum_TEMPLATE_HAIR           ArContentTemplateEnum = 4
)

// Enum value maps for ArContentTemplateEnum.
var (
	ArContentTemplateEnum_name = map[int32]string{
		0: "TEMPLATE_ALL",
		1: "TEMPLATE_EARRING",
		2: "TEMPLATE_GLASSES",
		3: "TEMPLATE_CONTECT_LENSES",
		4: "TEMPLATE_HAIR",
	}
	ArContentTemplateEnum_value = map[string]int32{
		"TEMPLATE_ALL":            0,
		"TEMPLATE_EARRING":        1,
		"TEMPLATE_GLASSES":        2,
		"TEMPLATE_CONTECT_LENSES": 3,
		"TEMPLATE_HAIR":           4,
	}
)

func (x ArContentTemplateEnum) Enum() *ArContentTemplateEnum {
	p := new(ArContentTemplateEnum)
	*p = x
	return p
}

func (x ArContentTemplateEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArContentTemplateEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_ArContent_proto_enumTypes[3].Descriptor()
}

func (ArContentTemplateEnum) Type() protoreflect.EnumType {
	return &file_ArContent_proto_enumTypes[3]
}

func (x ArContentTemplateEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArContentTemplateEnum.Descriptor instead.
func (ArContentTemplateEnum) EnumDescriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{3}
}

type ArContentImageType int32

const (
	ArContentImageType_TEMP           ArContentImageType = 0
	ArContentImageType_THUMBNAIL      ArContentImageType = 1
	ArContentImageType_TEMPLATE_IMAGE ArContentImageType = 2
	ArContentImageType_VIEWER_IMAGE   ArContentImageType = 3
	ArContentImageType_STATIC_IMAGE   ArContentImageType = 4
)

// Enum value maps for ArContentImageType.
var (
	ArContentImageType_name = map[int32]string{
		0: "TEMP",
		1: "THUMBNAIL",
		2: "TEMPLATE_IMAGE",
		3: "VIEWER_IMAGE",
		4: "STATIC_IMAGE",
	}
	ArContentImageType_value = map[string]int32{
		"TEMP":           0,
		"THUMBNAIL":      1,
		"TEMPLATE_IMAGE": 2,
		"VIEWER_IMAGE":   3,
		"STATIC_IMAGE":   4,
	}
)

func (x ArContentImageType) Enum() *ArContentImageType {
	p := new(ArContentImageType)
	*p = x
	return p
}

func (x ArContentImageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArContentImageType) Descriptor() protoreflect.EnumDescriptor {
	return file_ArContent_proto_enumTypes[4].Descriptor()
}

func (ArContentImageType) Type() protoreflect.EnumType {
	return &file_ArContent_proto_enumTypes[4]
}

func (x ArContentImageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArContentImageType.Descriptor instead.
func (ArContentImageType) EnumDescriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{4}
}

type GetArContentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo *Common.PageInfoRequest `protobuf:"bytes,1,opt,name=pageInfo,proto3" json:"pageInfo,omitempty"`
	Keyword  string                  `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *GetArContentListRequest) Reset() {
	*x = GetArContentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArContentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArContentListRequest) ProtoMessage() {}

func (x *GetArContentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArContentListRequest.ProtoReflect.Descriptor instead.
func (*GetArContentListRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{0}
}

func (x *GetArContentListRequest) GetPageInfo() *Common.PageInfoRequest {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *GetArContentListRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type GetArContentListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo *Common.PageInfoReply `protobuf:"bytes,1,opt,name=pageInfo,proto3" json:"pageInfo,omitempty"`
	Data     []*ArContentInfo      `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetArContentListReply) Reset() {
	*x = GetArContentListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArContentListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArContentListReply) ProtoMessage() {}

func (x *GetArContentListReply) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArContentListReply.ProtoReflect.Descriptor instead.
func (*GetArContentListReply) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{1}
}

func (x *GetArContentListReply) GetPageInfo() *Common.PageInfoReply {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *GetArContentListReply) GetData() []*ArContentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCategoryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCategoryListRequest) Reset() {
	*x = GetCategoryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryListRequest) ProtoMessage() {}

func (x *GetCategoryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryListRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryListRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{2}
}

type GetCategoryListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryEnum []ArContentCategoryEnum `protobuf:"varint,1,rep,packed,name=category_enum,json=categoryEnum,proto3,enum=ArContent.ArContentCategoryEnum" json:"category_enum,omitempty"`
}

func (x *GetCategoryListReply) Reset() {
	*x = GetCategoryListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryListReply) ProtoMessage() {}

func (x *GetCategoryListReply) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryListReply.ProtoReflect.Descriptor instead.
func (*GetCategoryListReply) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{3}
}

func (x *GetCategoryListReply) GetCategoryEnum() []ArContentCategoryEnum {
	if x != nil {
		return x.CategoryEnum
	}
	return nil
}

type GetTypeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryEnum ArContentCategoryEnum `protobuf:"varint,1,opt,name=category_enum,json=categoryEnum,proto3,enum=ArContent.ArContentCategoryEnum" json:"category_enum,omitempty"`
}

func (x *GetTypeListRequest) Reset() {
	*x = GetTypeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTypeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTypeListRequest) ProtoMessage() {}

func (x *GetTypeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTypeListRequest.ProtoReflect.Descriptor instead.
func (*GetTypeListRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{4}
}

func (x *GetTypeListRequest) GetCategoryEnum() ArContentCategoryEnum {
	if x != nil {
		return x.CategoryEnum
	}
	return ArContentCategoryEnum_CATRGORY_ALL
}

type GetTypeListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeEnum []ArContentTypeEnum `protobuf:"varint,1,rep,packed,name=type_enum,json=typeEnum,proto3,enum=ArContent.ArContentTypeEnum" json:"type_enum,omitempty"`
}

func (x *GetTypeListReply) Reset() {
	*x = GetTypeListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTypeListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTypeListReply) ProtoMessage() {}

func (x *GetTypeListReply) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTypeListReply.ProtoReflect.Descriptor instead.
func (*GetTypeListReply) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{5}
}

func (x *GetTypeListReply) GetTypeEnum() []ArContentTypeEnum {
	if x != nil {
		return x.TypeEnum
	}
	return nil
}

type GetTemplateListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryEnum ArContentCategoryEnum `protobuf:"varint,1,opt,name=category_enum,json=categoryEnum,proto3,enum=ArContent.ArContentCategoryEnum" json:"category_enum,omitempty"`
	TypeEnum     ArContentTypeEnum     `protobuf:"varint,2,opt,name=type_enum,json=typeEnum,proto3,enum=ArContent.ArContentTypeEnum" json:"type_enum,omitempty"`
}

func (x *GetTemplateListRequest) Reset() {
	*x = GetTemplateListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateListRequest) ProtoMessage() {}

func (x *GetTemplateListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateListRequest.ProtoReflect.Descriptor instead.
func (*GetTemplateListRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{6}
}

func (x *GetTemplateListRequest) GetCategoryEnum() ArContentCategoryEnum {
	if x != nil {
		return x.CategoryEnum
	}
	return ArContentCategoryEnum_CATRGORY_ALL
}

func (x *GetTemplateListRequest) GetTypeEnum() ArContentTypeEnum {
	if x != nil {
		return x.TypeEnum
	}
	return ArContentTypeEnum_TYPE_ALL
}

type GetTemplateListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateEnum []ArContentTemplateEnum `protobuf:"varint,1,rep,packed,name=template_enum,json=templateEnum,proto3,enum=ArContent.ArContentTemplateEnum" json:"template_enum,omitempty"`
}

func (x *GetTemplateListReply) Reset() {
	*x = GetTemplateListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateListReply) ProtoMessage() {}

func (x *GetTemplateListReply) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateListReply.ProtoReflect.Descriptor instead.
func (*GetTemplateListReply) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{7}
}

func (x *GetTemplateListReply) GetTemplateEnum() []ArContentTemplateEnum {
	if x != nil {
		return x.TemplateEnum
	}
	return nil
}

type CreateArContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tag                 string                `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	UploadThumbnailName string                `protobuf:"bytes,3,opt,name=upload_thumbnail_name,json=uploadThumbnailName,proto3" json:"upload_thumbnail_name,omitempty"`
	CategoryEnum        ArContentCategoryEnum `protobuf:"varint,4,opt,name=category_enum,json=categoryEnum,proto3,enum=ArContent.ArContentCategoryEnum" json:"category_enum,omitempty"`
	TypeEnum            ArContentTypeEnum     `protobuf:"varint,5,opt,name=type_enum,json=typeEnum,proto3,enum=ArContent.ArContentTypeEnum" json:"type_enum,omitempty"`
	TemplateEnum        ArContentTemplateEnum `protobuf:"varint,6,opt,name=template_enum,json=templateEnum,proto3,enum=ArContent.ArContentTemplateEnum" json:"template_enum,omitempty"`
}

func (x *CreateArContentRequest) Reset() {
	*x = CreateArContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArContentRequest) ProtoMessage() {}

func (x *CreateArContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArContentRequest.ProtoReflect.Descriptor instead.
func (*CreateArContentRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{8}
}

func (x *CreateArContentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateArContentRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CreateArContentRequest) GetUploadThumbnailName() string {
	if x != nil {
		return x.UploadThumbnailName
	}
	return ""
}

func (x *CreateArContentRequest) GetCategoryEnum() ArContentCategoryEnum {
	if x != nil {
		return x.CategoryEnum
	}
	return ArContentCategoryEnum_CATRGORY_ALL
}

func (x *CreateArContentRequest) GetTypeEnum() ArContentTypeEnum {
	if x != nil {
		return x.TypeEnum
	}
	return ArContentTypeEnum_TYPE_ALL
}

func (x *CreateArContentRequest) GetTemplateEnum() ArContentTemplateEnum {
	if x != nil {
		return x.TemplateEnum
	}
	return ArContentTemplateEnum_TEMPLATE_ALL
}

type CreateArContentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ArContentInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateArContentReply) Reset() {
	*x = CreateArContentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArContentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArContentReply) ProtoMessage() {}

func (x *CreateArContentReply) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArContentReply.ProtoReflect.Descriptor instead.
func (*CreateArContentReply) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{9}
}

func (x *CreateArContentReply) GetData() *ArContentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateArContentThreeDModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArContentId                 string `protobuf:"bytes,1,opt,name=ar_content_id,json=arContentId,proto3" json:"ar_content_id,omitempty"`
	UploadedThreeDModelFilename string `protobuf:"bytes,2,opt,name=uploaded_three_d_model_filename,json=uploadedThreeDModelFilename,proto3" json:"uploaded_three_d_model_filename,omitempty"`
}

func (x *UpdateArContentThreeDModelRequest) Reset() {
	*x = UpdateArContentThreeDModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArContentThreeDModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArContentThreeDModelRequest) ProtoMessage() {}

func (x *UpdateArContentThreeDModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArContentThreeDModelRequest.ProtoReflect.Descriptor instead.
func (*UpdateArContentThreeDModelRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateArContentThreeDModelRequest) GetArContentId() string {
	if x != nil {
		return x.ArContentId
	}
	return ""
}

func (x *UpdateArContentThreeDModelRequest) GetUploadedThreeDModelFilename() string {
	if x != nil {
		return x.UploadedThreeDModelFilename
	}
	return ""
}

type UpdateArContentTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArContentId  string `protobuf:"bytes,1,opt,name=ar_content_id,json=arContentId,proto3" json:"ar_content_id,omitempty"`
	TemplateData []byte `protobuf:"bytes,2,opt,name=template_data,json=templateData,proto3" json:"template_data,omitempty"`
}

func (x *UpdateArContentTemplateRequest) Reset() {
	*x = UpdateArContentTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArContentTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArContentTemplateRequest) ProtoMessage() {}

func (x *UpdateArContentTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArContentTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateArContentTemplateRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateArContentTemplateRequest) GetArContentId() string {
	if x != nil {
		return x.ArContentId
	}
	return ""
}

func (x *UpdateArContentTemplateRequest) GetTemplateData() []byte {
	if x != nil {
		return x.TemplateData
	}
	return nil
}

type UpdateArContentTemplateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ArContentInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateArContentTemplateReply) Reset() {
	*x = UpdateArContentTemplateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArContentTemplateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArContentTemplateReply) ProtoMessage() {}

func (x *UpdateArContentTemplateReply) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArContentTemplateReply.ProtoReflect.Descriptor instead.
func (*UpdateArContentTemplateReply) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateArContentTemplateReply) GetData() *ArContentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateArContentViewerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArContentId   string           `protobuf:"bytes,1,opt,name=ar_content_id,json=arContentId,proto3" json:"ar_content_id,omitempty"`
	ViewerSetting *ArViewerSetting `protobuf:"bytes,2,opt,name=viewer_setting,json=viewerSetting,proto3" json:"viewer_setting,omitempty"`
}

func (x *UpdateArContentViewerRequest) Reset() {
	*x = UpdateArContentViewerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArContentViewerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArContentViewerRequest) ProtoMessage() {}

func (x *UpdateArContentViewerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArContentViewerRequest.ProtoReflect.Descriptor instead.
func (*UpdateArContentViewerRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateArContentViewerRequest) GetArContentId() string {
	if x != nil {
		return x.ArContentId
	}
	return ""
}

func (x *UpdateArContentViewerRequest) GetViewerSetting() *ArViewerSetting {
	if x != nil {
		return x.ViewerSetting
	}
	return nil
}

type UpdateArContentViewerReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ArContentInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateArContentViewerReplay) Reset() {
	*x = UpdateArContentViewerReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArContentViewerReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArContentViewerReplay) ProtoMessage() {}

func (x *UpdateArContentViewerReplay) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArContentViewerReplay.ProtoReflect.Descriptor instead.
func (*UpdateArContentViewerReplay) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateArContentViewerReplay) GetData() *ArContentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetArContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArContentId string `protobuf:"bytes,1,opt,name=ar_content_id,json=arContentId,proto3" json:"ar_content_id,omitempty"`
}

func (x *GetArContentRequest) Reset() {
	*x = GetArContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArContentRequest) ProtoMessage() {}

func (x *GetArContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArContentRequest.ProtoReflect.Descriptor instead.
func (*GetArContentRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{15}
}

func (x *GetArContentRequest) GetArContentId() string {
	if x != nil {
		return x.ArContentId
	}
	return ""
}

type GetArContentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ArContentInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetArContentReply) Reset() {
	*x = GetArContentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArContentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArContentReply) ProtoMessage() {}

func (x *GetArContentReply) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArContentReply.ProtoReflect.Descriptor instead.
func (*GetArContentReply) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{16}
}

func (x *GetArContentReply) GetData() *ArContentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateArContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArContentId         string  `protobuf:"bytes,1,opt,name=ar_content_id,json=arContentId,proto3" json:"ar_content_id,omitempty"`
	Name                string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tag                 string  `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	UploadThumbnailName *string `protobuf:"bytes,4,opt,name=upload_thumbnail_name,json=uploadThumbnailName,proto3,oneof" json:"upload_thumbnail_name,omitempty"`
}

func (x *UpdateArContentRequest) Reset() {
	*x = UpdateArContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArContentRequest) ProtoMessage() {}

func (x *UpdateArContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArContentRequest.ProtoReflect.Descriptor instead.
func (*UpdateArContentRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateArContentRequest) GetArContentId() string {
	if x != nil {
		return x.ArContentId
	}
	return ""
}

func (x *UpdateArContentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateArContentRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *UpdateArContentRequest) GetUploadThumbnailName() string {
	if x != nil && x.UploadThumbnailName != nil {
		return *x.UploadThumbnailName
	}
	return ""
}

type UpdateArContentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ArContentInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateArContentReply) Reset() {
	*x = UpdateArContentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArContentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArContentReply) ProtoMessage() {}

func (x *UpdateArContentReply) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArContentReply.ProtoReflect.Descriptor instead.
func (*UpdateArContentReply) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateArContentReply) GetData() *ArContentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateArContentIsOnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArContentId string `protobuf:"bytes,1,opt,name=ar_content_id,json=arContentId,proto3" json:"ar_content_id,omitempty"`
	IsOn        *bool  `protobuf:"varint,2,opt,name=is_on,json=isOn,proto3,oneof" json:"is_on,omitempty"`
}

func (x *UpdateArContentIsOnRequest) Reset() {
	*x = UpdateArContentIsOnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArContentIsOnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArContentIsOnRequest) ProtoMessage() {}

func (x *UpdateArContentIsOnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArContentIsOnRequest.ProtoReflect.Descriptor instead.
func (*UpdateArContentIsOnRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateArContentIsOnRequest) GetArContentId() string {
	if x != nil {
		return x.ArContentId
	}
	return ""
}

func (x *UpdateArContentIsOnRequest) GetIsOn() bool {
	if x != nil && x.IsOn != nil {
		return *x.IsOn
	}
	return false
}

type DeleteArContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArContentId string `protobuf:"bytes,1,opt,name=ar_content_id,json=arContentId,proto3" json:"ar_content_id,omitempty"`
}

func (x *DeleteArContentRequest) Reset() {
	*x = DeleteArContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteArContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArContentRequest) ProtoMessage() {}

func (x *DeleteArContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArContentRequest.ProtoReflect.Descriptor instead.
func (*DeleteArContentRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteArContentRequest) GetArContentId() string {
	if x != nil {
		return x.ArContentId
	}
	return ""
}

type DuplicateArContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArContentId string `protobuf:"bytes,1,opt,name=ar_content_id,json=arContentId,proto3" json:"ar_content_id,omitempty"`
}

func (x *DuplicateArContentRequest) Reset() {
	*x = DuplicateArContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DuplicateArContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuplicateArContentRequest) ProtoMessage() {}

func (x *DuplicateArContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuplicateArContentRequest.ProtoReflect.Descriptor instead.
func (*DuplicateArContentRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{21}
}

func (x *DuplicateArContentRequest) GetArContentId() string {
	if x != nil {
		return x.ArContentId
	}
	return ""
}

type DuplicateArContentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ArContentInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DuplicateArContentReply) Reset() {
	*x = DuplicateArContentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DuplicateArContentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuplicateArContentReply) ProtoMessage() {}

func (x *DuplicateArContentReply) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuplicateArContentReply.ProtoReflect.Descriptor instead.
func (*DuplicateArContentReply) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{22}
}

func (x *DuplicateArContentReply) GetData() *ArContentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ArContentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArContentId     string                `protobuf:"bytes,1,opt,name=ar_content_id,json=arContentId,proto3" json:"ar_content_id,omitempty"`
	Name            string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tag             string                `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	IsOn            *bool                 `protobuf:"varint,4,opt,name=is_on,json=isOn,proto3,oneof" json:"is_on,omitempty"`
	CategoryEnum    ArContentCategoryEnum `protobuf:"varint,5,opt,name=category_enum,json=categoryEnum,proto3,enum=ArContent.ArContentCategoryEnum" json:"category_enum,omitempty"`
	TypeEnum        ArContentTypeEnum     `protobuf:"varint,6,opt,name=type_enum,json=typeEnum,proto3,enum=ArContent.ArContentTypeEnum" json:"type_enum,omitempty"`
	TemplateEnum    ArContentTemplateEnum `protobuf:"varint,7,opt,name=template_enum,json=templateEnum,proto3,enum=ArContent.ArContentTemplateEnum" json:"template_enum,omitempty"`
	TemplateSetting []byte                `protobuf:"bytes,8,opt,name=template_setting,json=templateSetting,proto3" json:"template_setting,omitempty"`
	ViewerSetting   *ArViewerSetting      `protobuf:"bytes,9,opt,name=viewer_setting,json=viewerSetting,proto3" json:"viewer_setting,omitempty"`
	ThumbnailPath   string                `protobuf:"bytes,10,opt,name=thumbnail_path,json=thumbnailPath,proto3" json:"thumbnail_path,omitempty"`
	ThumbnailName   string                `protobuf:"bytes,11,opt,name=thumbnail_name,json=thumbnailName,proto3" json:"thumbnail_name,omitempty"`
	CreateTime      string                `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string                `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *ArContentInfo) Reset() {
	*x = ArContentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArContentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArContentInfo) ProtoMessage() {}

func (x *ArContentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArContentInfo.ProtoReflect.Descriptor instead.
func (*ArContentInfo) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{23}
}

func (x *ArContentInfo) GetArContentId() string {
	if x != nil {
		return x.ArContentId
	}
	return ""
}

func (x *ArContentInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArContentInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ArContentInfo) GetIsOn() bool {
	if x != nil && x.IsOn != nil {
		return *x.IsOn
	}
	return false
}

func (x *ArContentInfo) GetCategoryEnum() ArContentCategoryEnum {
	if x != nil {
		return x.CategoryEnum
	}
	return ArContentCategoryEnum_CATRGORY_ALL
}

func (x *ArContentInfo) GetTypeEnum() ArContentTypeEnum {
	if x != nil {
		return x.TypeEnum
	}
	return ArContentTypeEnum_TYPE_ALL
}

func (x *ArContentInfo) GetTemplateEnum() ArContentTemplateEnum {
	if x != nil {
		return x.TemplateEnum
	}
	return ArContentTemplateEnum_TEMPLATE_ALL
}

func (x *ArContentInfo) GetTemplateSetting() []byte {
	if x != nil {
		return x.TemplateSetting
	}
	return nil
}

func (x *ArContentInfo) GetViewerSetting() *ArViewerSetting {
	if x != nil {
		return x.ViewerSetting
	}
	return nil
}

func (x *ArContentInfo) GetThumbnailPath() string {
	if x != nil {
		return x.ThumbnailPath
	}
	return ""
}

func (x *ArContentInfo) GetThumbnailName() string {
	if x != nil {
		return x.ThumbnailName
	}
	return ""
}

func (x *ArContentInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ArContentInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type ArViewerSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogoImagePath       string      `protobuf:"bytes,1,opt,name=logo_image_path,json=logoImagePath,proto3" json:"logo_image_path,omitempty"`
	LogoImageName       string      `protobuf:"bytes,2,opt,name=logo_image_name,json=logoImageName,proto3" json:"logo_image_name,omitempty"`
	LogoUrl             string      `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	BorderColor         string      `protobuf:"bytes,4,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	CameraButtonColor   string      `protobuf:"bytes,5,opt,name=camera_button_color,json=cameraButtonColor,proto3" json:"camera_button_color,omitempty"`
	AllowCapture        *bool       `protobuf:"varint,6,opt,name=allow_capture,json=allowCapture,proto3,oneof" json:"allow_capture,omitempty"`
	UploadLogoImageName string      `protobuf:"bytes,7,opt,name=upload_logo_image_name,json=uploadLogoImageName,proto3" json:"upload_logo_image_name,omitempty"`
	ViewerRightButton   *LinkButton `protobuf:"bytes,8,opt,name=viewer_right_button,json=viewerRightButton,proto3" json:"viewer_right_button,omitempty"`
	ViewerLeftButton    *LinkButton `protobuf:"bytes,9,opt,name=viewer_left_button,json=viewerLeftButton,proto3" json:"viewer_left_button,omitempty"`
}

func (x *ArViewerSetting) Reset() {
	*x = ArViewerSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArViewerSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArViewerSetting) ProtoMessage() {}

func (x *ArViewerSetting) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArViewerSetting.ProtoReflect.Descriptor instead.
func (*ArViewerSetting) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{24}
}

func (x *ArViewerSetting) GetLogoImagePath() string {
	if x != nil {
		return x.LogoImagePath
	}
	return ""
}

func (x *ArViewerSetting) GetLogoImageName() string {
	if x != nil {
		return x.LogoImageName
	}
	return ""
}

func (x *ArViewerSetting) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *ArViewerSetting) GetBorderColor() string {
	if x != nil {
		return x.BorderColor
	}
	return ""
}

func (x *ArViewerSetting) GetCameraButtonColor() string {
	if x != nil {
		return x.CameraButtonColor
	}
	return ""
}

func (x *ArViewerSetting) GetAllowCapture() bool {
	if x != nil && x.AllowCapture != nil {
		return *x.AllowCapture
	}
	return false
}

func (x *ArViewerSetting) GetUploadLogoImageName() string {
	if x != nil {
		return x.UploadLogoImageName
	}
	return ""
}

func (x *ArViewerSetting) GetViewerRightButton() *LinkButton {
	if x != nil {
		return x.ViewerRightButton
	}
	return nil
}

func (x *ArViewerSetting) GetViewerLeftButton() *LinkButton {
	if x != nil {
		return x.ViewerLeftButton
	}
	return nil
}

type LinkButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable    *bool  `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	BtnText   string `protobuf:"bytes,2,opt,name=btn_text,json=btnText,proto3" json:"btn_text,omitempty"`
	BtnColor  string `protobuf:"bytes,3,opt,name=btn_color,json=btnColor,proto3" json:"btn_color,omitempty"`
	TextColor string `protobuf:"bytes,4,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	Url       string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *LinkButton) Reset() {
	*x = LinkButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkButton) ProtoMessage() {}

func (x *LinkButton) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkButton.ProtoReflect.Descriptor instead.
func (*LinkButton) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{25}
}

func (x *LinkButton) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *LinkButton) GetBtnText() string {
	if x != nil {
		return x.BtnText
	}
	return ""
}

func (x *LinkButton) GetBtnColor() string {
	if x != nil {
		return x.BtnColor
	}
	return ""
}

func (x *LinkButton) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *LinkButton) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetArLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArContentId string `protobuf:"bytes,1,opt,name=ar_content_id,json=arContentId,proto3" json:"ar_content_id,omitempty"`
}

func (x *GetArLinkRequest) Reset() {
	*x = GetArLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArLinkRequest) ProtoMessage() {}

func (x *GetArLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArLinkRequest.ProtoReflect.Descriptor instead.
func (*GetArLinkRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{26}
}

func (x *GetArLinkRequest) GetArContentId() string {
	if x != nil {
		return x.ArContentId
	}
	return ""
}

type GetArLinkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArContentViewerPath string `protobuf:"bytes,1,opt,name=ar_content_viewer_path,json=arContentViewerPath,proto3" json:"ar_content_viewer_path,omitempty"`
}

func (x *GetArLinkReply) Reset() {
	*x = GetArLinkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArLinkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArLinkReply) ProtoMessage() {}

func (x *GetArLinkReply) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArLinkReply.ProtoReflect.Descriptor instead.
func (*GetArLinkReply) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{27}
}

func (x *GetArLinkReply) GetArContentViewerPath() string {
	if x != nil {
		return x.ArContentViewerPath
	}
	return ""
}

type GetViewerDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArContentViewerUrlId string `protobuf:"bytes,1,opt,name=ar_content_viewer_url_id,json=arContentViewerUrlId,proto3" json:"ar_content_viewer_url_id,omitempty"`
}

func (x *GetViewerDataRequest) Reset() {
	*x = GetViewerDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetViewerDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetViewerDataRequest) ProtoMessage() {}

func (x *GetViewerDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetViewerDataRequest.ProtoReflect.Descriptor instead.
func (*GetViewerDataRequest) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{28}
}

func (x *GetViewerDataRequest) GetArContentViewerUrlId() string {
	if x != nil {
		return x.ArContentViewerUrlId
	}
	return ""
}

type GetViewerDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *ArContentInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	AdminId string         `protobuf:"bytes,2,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
}

func (x *GetViewerDataReply) Reset() {
	*x = GetViewerDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContent_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetViewerDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetViewerDataReply) ProtoMessage() {}

func (x *GetViewerDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_ArContent_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetViewerDataReply.ProtoReflect.Descriptor instead.
func (*GetViewerDataReply) Descriptor() ([]byte, []int) {
	return file_ArContent_proto_rawDescGZIP(), []int{29}
}

func (x *GetViewerDataReply) GetData() *ArContentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetViewerDataReply) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

var File_ArContent_proto protoreflect.FileDescriptor

var file_ArContent_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x0c, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x78, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x18,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x45, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x65, 0x6e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x5b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a,
	0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x45, 0x6e, 0x75, 0x6d, 0x22, 0x4d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x41, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x22, 0x9a, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45,
	0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x22, 0x5d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x22,
	0xbb, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x32, 0x0a, 0x15, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x41, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x39, 0x0a, 0x09, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x45, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x44, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65, 0x65, 0x44, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x44, 0x0a,
	0x1f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f,
	0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x54, 0x68, 0x72, 0x65, 0x65, 0x44, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4c,
	0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x85, 0x01, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0d, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x41, 0x0a, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x41, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x22, 0x4b, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x39, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xb5, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x12, 0x37, 0x0a, 0x15, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x13, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x18, 0x0a,
	0x16, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x64, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x73, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x04, 0x69, 0x73, 0x4f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x73,
	0x5f, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0d, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x3f, 0x0a, 0x19, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0d, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x47, 0x0a, 0x17, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc4, 0x04, 0x0a, 0x0d,
	0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a,
	0x0d, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x69, 0x73, 0x4f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x45, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x41, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x12, 0x45, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x41, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x41, 0x0a, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x72, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x73, 0x5f,
	0x6f, 0x6e, 0x22, 0xcc, 0x03, 0x0a, 0x0f, 0x41, 0x72, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x6f, 0x67, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x26,
	0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x6f, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x61,
	0x70, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x33,
	0x0a, 0x16, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x13, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x11, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x12, 0x76, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x10, 0x76,
	0x69, 0x65, 0x77, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x9d, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x74, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x74, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x74, 0x6e, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x74, 0x6e,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x36, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x16, 0x61,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x4e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x18, 0x61, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x49, 0x64,
	0x22, 0x5d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x2a,
	0x37, 0x0a, 0x0f, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x59, 0x50, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45,
	0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x02, 0x2a, 0x4f, 0x0a, 0x15, 0x41, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75,
	0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x54, 0x52, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x41, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x41, 0x54, 0x52, 0x47, 0x4f, 0x52, 0x59, 0x5f,
	0x48, 0x45, 0x41, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x41, 0x54, 0x52, 0x47, 0x4f,
	0x52, 0x59, 0x5f, 0x46, 0x41, 0x43, 0x45, 0x10, 0x02, 0x2a, 0x5f, 0x0a, 0x11, 0x41, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0c,
	0x0a, 0x08, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x41, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x48, 0x41, 0x49, 0x52, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x45, 0x53, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4c, 0x45, 0x4e, 0x53, 0x10, 0x04, 0x2a, 0x85, 0x01, 0x0a, 0x15, 0x41,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45,
	0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41,
	0x54, 0x45, 0x5f, 0x45, 0x41, 0x52, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x45, 0x53,
	0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x45, 0x43, 0x54, 0x5f, 0x4c, 0x45, 0x4e, 0x53, 0x45, 0x53, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x48, 0x41, 0x49, 0x52,
	0x10, 0x04, 0x2a, 0x65, 0x0a, 0x12, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x4d, 0x50,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x48, 0x55, 0x4d, 0x42, 0x4e, 0x41, 0x49, 0x4c, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4d,
	0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x49, 0x45, 0x57, 0x45, 0x52, 0x5f,
	0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x49,
	0x43, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x04, 0x42, 0x20, 0x5a, 0x1e, 0x4d, 0x45, 0x54,
	0x41, 0x52, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ArContent_proto_rawDescOnce sync.Once
	file_ArContent_proto_rawDescData = file_ArContent_proto_rawDesc
)

func file_ArContent_proto_rawDescGZIP() []byte {
	file_ArContent_proto_rawDescOnce.Do(func() {
		file_ArContent_proto_rawDescData = protoimpl.X.CompressGZIP(file_ArContent_proto_rawDescData)
	})
	return file_ArContent_proto_rawDescData
}

var file_ArContent_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_ArContent_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_ArContent_proto_goTypes = []interface{}{
	(ArContentCollet)(0),                      // 0: ArContent.ArContentCollet
	(ArContentCategoryEnum)(0),                // 1: ArContent.ArContentCategoryEnum
	(ArContentTypeEnum)(0),                    // 2: ArContent.ArContentTypeEnum
	(ArContentTemplateEnum)(0),                // 3: ArContent.ArContentTemplateEnum
	(ArContentImageType)(0),                   // 4: ArContent.ArContentImageType
	(*GetArContentListRequest)(nil),           // 5: ArContent.GetArContentListRequest
	(*GetArContentListReply)(nil),             // 6: ArContent.GetArContentListReply
	(*GetCategoryListRequest)(nil),            // 7: ArContent.GetCategoryListRequest
	(*GetCategoryListReply)(nil),              // 8: ArContent.GetCategoryListReply
	(*GetTypeListRequest)(nil),                // 9: ArContent.GetTypeListRequest
	(*GetTypeListReply)(nil),                  // 10: ArContent.GetTypeListReply
	(*GetTemplateListRequest)(nil),            // 11: ArContent.GetTemplateListRequest
	(*GetTemplateListReply)(nil),              // 12: ArContent.GetTemplateListReply
	(*CreateArContentRequest)(nil),            // 13: ArContent.CreateArContentRequest
	(*CreateArContentReply)(nil),              // 14: ArContent.CreateArContentReply
	(*UpdateArContentThreeDModelRequest)(nil), // 15: ArContent.UpdateArContentThreeDModelRequest
	(*UpdateArContentTemplateRequest)(nil),    // 16: ArContent.UpdateArContentTemplateRequest
	(*UpdateArContentTemplateReply)(nil),      // 17: ArContent.UpdateArContentTemplateReply
	(*UpdateArContentViewerRequest)(nil),      // 18: ArContent.UpdateArContentViewerRequest
	(*UpdateArContentViewerReplay)(nil),       // 19: ArContent.UpdateArContentViewerReplay
	(*GetArContentRequest)(nil),               // 20: ArContent.GetArContentRequest
	(*GetArContentReply)(nil),                 // 21: ArContent.GetArContentReply
	(*UpdateArContentRequest)(nil),            // 22: ArContent.UpdateArContentRequest
	(*UpdateArContentReply)(nil),              // 23: ArContent.UpdateArContentReply
	(*UpdateArContentIsOnRequest)(nil),        // 24: ArContent.UpdateArContentIsOnRequest
	(*DeleteArContentRequest)(nil),            // 25: ArContent.DeleteArContentRequest
	(*DuplicateArContentRequest)(nil),         // 26: ArContent.DuplicateArContentRequest
	(*DuplicateArContentReply)(nil),           // 27: ArContent.DuplicateArContentReply
	(*ArContentInfo)(nil),                     // 28: ArContent.ArContentInfo
	(*ArViewerSetting)(nil),                   // 29: ArContent.ArViewerSetting
	(*LinkButton)(nil),                        // 30: ArContent.LinkButton
	(*GetArLinkRequest)(nil),                  // 31: ArContent.GetArLinkRequest
	(*GetArLinkReply)(nil),                    // 32: ArContent.GetArLinkReply
	(*GetViewerDataRequest)(nil),              // 33: ArContent.GetViewerDataRequest
	(*GetViewerDataReply)(nil),                // 34: ArContent.GetViewerDataReply
	(*Common.PageInfoRequest)(nil),            // 35: Common.PageInfoRequest
	(*Common.PageInfoReply)(nil),              // 36: Common.PageInfoReply
}
var file_ArContent_proto_depIdxs = []int32{
	35, // 0: ArContent.GetArContentListRequest.pageInfo:type_name -> Common.PageInfoRequest
	36, // 1: ArContent.GetArContentListReply.pageInfo:type_name -> Common.PageInfoReply
	28, // 2: ArContent.GetArContentListReply.data:type_name -> ArContent.ArContentInfo
	1,  // 3: ArContent.GetCategoryListReply.category_enum:type_name -> ArContent.ArContentCategoryEnum
	1,  // 4: ArContent.GetTypeListRequest.category_enum:type_name -> ArContent.ArContentCategoryEnum
	2,  // 5: ArContent.GetTypeListReply.type_enum:type_name -> ArContent.ArContentTypeEnum
	1,  // 6: ArContent.GetTemplateListRequest.category_enum:type_name -> ArContent.ArContentCategoryEnum
	2,  // 7: ArContent.GetTemplateListRequest.type_enum:type_name -> ArContent.ArContentTypeEnum
	3,  // 8: ArContent.GetTemplateListReply.template_enum:type_name -> ArContent.ArContentTemplateEnum
	1,  // 9: ArContent.CreateArContentRequest.category_enum:type_name -> ArContent.ArContentCategoryEnum
	2,  // 10: ArContent.CreateArContentRequest.type_enum:type_name -> ArContent.ArContentTypeEnum
	3,  // 11: ArContent.CreateArContentRequest.template_enum:type_name -> ArContent.ArContentTemplateEnum
	28, // 12: ArContent.CreateArContentReply.data:type_name -> ArContent.ArContentInfo
	28, // 13: ArContent.UpdateArContentTemplateReply.data:type_name -> ArContent.ArContentInfo
	29, // 14: ArContent.UpdateArContentViewerRequest.viewer_setting:type_name -> ArContent.ArViewerSetting
	28, // 15: ArContent.UpdateArContentViewerReplay.data:type_name -> ArContent.ArContentInfo
	28, // 16: ArContent.GetArContentReply.data:type_name -> ArContent.ArContentInfo
	28, // 17: ArContent.UpdateArContentReply.data:type_name -> ArContent.ArContentInfo
	28, // 18: ArContent.DuplicateArContentReply.data:type_name -> ArContent.ArContentInfo
	1,  // 19: ArContent.ArContentInfo.category_enum:type_name -> ArContent.ArContentCategoryEnum
	2,  // 20: ArContent.ArContentInfo.type_enum:type_name -> ArContent.ArContentTypeEnum
	3,  // 21: ArContent.ArContentInfo.template_enum:type_name -> ArContent.ArContentTemplateEnum
	29, // 22: ArContent.ArContentInfo.viewer_setting:type_name -> ArContent.ArViewerSetting
	30, // 23: ArContent.ArViewerSetting.viewer_right_button:type_name -> ArContent.LinkButton
	30, // 24: ArContent.ArViewerSetting.viewer_left_button:type_name -> ArContent.LinkButton
	28, // 25: ArContent.GetViewerDataReply.data:type_name -> ArContent.ArContentInfo
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_ArContent_proto_init() }
func file_ArContent_proto_init() {
	if File_ArContent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ArContent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArContentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArContentListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTypeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTypeListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArContentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArContentThreeDModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArContentTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArContentTemplateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArContentViewerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArContentViewerReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArContentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArContentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArContentIsOnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteArContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DuplicateArContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DuplicateArContentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArContentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArViewerSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArLinkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetViewerDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContent_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetViewerDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ArContent_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_ArContent_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_ArContent_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_ArContent_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_ArContent_proto_msgTypes[25].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ArContent_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ArContent_proto_goTypes,
		DependencyIndexes: file_ArContent_proto_depIdxs,
		EnumInfos:         file_ArContent_proto_enumTypes,
		MessageInfos:      file_ArContent_proto_msgTypes,
	}.Build()
	File_ArContent_proto = out.File
	file_ArContent_proto_rawDesc = nil
	file_ArContent_proto_goTypes = nil
	file_ArContent_proto_depIdxs = nil
}
