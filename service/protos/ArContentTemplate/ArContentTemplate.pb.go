// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: ArContentTemplate.proto

package ArContentTemplate

import (
	Common "service/protos/Common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EarringObjectLocationEnum int32

const (
	EarringObjectLocationEnum_EARRING_NONE   EarringObjectLocationEnum = 0
	EarringObjectLocationEnum_EARRING_FIRST  EarringObjectLocationEnum = 1
	EarringObjectLocationEnum_EARRING_SECOND EarringObjectLocationEnum = 2
	EarringObjectLocationEnum_EARRING_THIRD  EarringObjectLocationEnum = 3
)

// Enum value maps for EarringObjectLocationEnum.
var (
	EarringObjectLocationEnum_name = map[int32]string{
		0: "EARRING_NONE",
		1: "EARRING_FIRST",
		2: "EARRING_SECOND",
		3: "EARRING_THIRD",
	}
	EarringObjectLocationEnum_value = map[string]int32{
		"EARRING_NONE":   0,
		"EARRING_FIRST":  1,
		"EARRING_SECOND": 2,
		"EARRING_THIRD":  3,
	}
)

func (x EarringObjectLocationEnum) Enum() *EarringObjectLocationEnum {
	p := new(EarringObjectLocationEnum)
	*p = x
	return p
}

func (x EarringObjectLocationEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EarringObjectLocationEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_ArContentTemplate_proto_enumTypes[0].Descriptor()
}

func (EarringObjectLocationEnum) Type() protoreflect.EnumType {
	return &file_ArContentTemplate_proto_enumTypes[0]
}

func (x EarringObjectLocationEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EarringObjectLocationEnum.Descriptor instead.
func (EarringObjectLocationEnum) EnumDescriptor() ([]byte, []int) {
	return file_ArContentTemplate_proto_rawDescGZIP(), []int{0}
}

type GlassesObjectLocationEnum int32

const (
	GlassesObjectLocationEnum_GLASSES_NONE  GlassesObjectLocationEnum = 0
	GlassesObjectLocationEnum_GLASSES_RIGHT GlassesObjectLocationEnum = 1
	GlassesObjectLocationEnum_GLASSES_FRONT GlassesObjectLocationEnum = 2
	GlassesObjectLocationEnum_GLASSES_LEFT  GlassesObjectLocationEnum = 3
)

// Enum value maps for GlassesObjectLocationEnum.
var (
	GlassesObjectLocationEnum_name = map[int32]string{
		0: "GLASSES_NONE",
		1: "GLASSES_RIGHT",
		2: "GLASSES_FRONT",
		3: "GLASSES_LEFT",
	}
	GlassesObjectLocationEnum_value = map[string]int32{
		"GLASSES_NONE":  0,
		"GLASSES_RIGHT": 1,
		"GLASSES_FRONT": 2,
		"GLASSES_LEFT":  3,
	}
)

func (x GlassesObjectLocationEnum) Enum() *GlassesObjectLocationEnum {
	p := new(GlassesObjectLocationEnum)
	*p = x
	return p
}

func (x GlassesObjectLocationEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GlassesObjectLocationEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_ArContentTemplate_proto_enumTypes[1].Descriptor()
}

func (GlassesObjectLocationEnum) Type() protoreflect.EnumType {
	return &file_ArContentTemplate_proto_enumTypes[1]
}

func (x GlassesObjectLocationEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GlassesObjectLocationEnum.Descriptor instead.
func (GlassesObjectLocationEnum) EnumDescriptor() ([]byte, []int) {
	return file_ArContentTemplate_proto_rawDescGZIP(), []int{1}
}

type ObjectSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImagePath       string         `protobuf:"bytes,1,opt,name=image_path,json=imagePath,proto3" json:"image_path,omitempty"`
	ImageName       string         `protobuf:"bytes,2,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	Position        *Common.Vector `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Rotation        *Common.Vector `protobuf:"bytes,4,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Scale           *Common.Vector `protobuf:"bytes,5,opt,name=scale,proto3" json:"scale,omitempty"`
	ImageUploadName string         `protobuf:"bytes,6,opt,name=image_upload_name,json=imageUploadName,proto3" json:"image_upload_name,omitempty"`
}

func (x *ObjectSetting) Reset() {
	*x = ObjectSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContentTemplate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectSetting) ProtoMessage() {}

func (x *ObjectSetting) ProtoReflect() protoreflect.Message {
	mi := &file_ArContentTemplate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectSetting.ProtoReflect.Descriptor instead.
func (*ObjectSetting) Descriptor() ([]byte, []int) {
	return file_ArContentTemplate_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectSetting) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *ObjectSetting) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *ObjectSetting) GetPosition() *Common.Vector {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ObjectSetting) GetRotation() *Common.Vector {
	if x != nil {
		return x.Rotation
	}
	return nil
}

func (x *ObjectSetting) GetScale() *Common.Vector {
	if x != nil {
		return x.Scale
	}
	return nil
}

func (x *ObjectSetting) GetImageUploadName() string {
	if x != nil {
		return x.ImageUploadName
	}
	return ""
}

type TemplateEarring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left  *EarringSettingSide `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right *EarringSettingSide `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *TemplateEarring) Reset() {
	*x = TemplateEarring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContentTemplate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateEarring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateEarring) ProtoMessage() {}

func (x *TemplateEarring) ProtoReflect() protoreflect.Message {
	mi := &file_ArContentTemplate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateEarring.ProtoReflect.Descriptor instead.
func (*TemplateEarring) Descriptor() ([]byte, []int) {
	return file_ArContentTemplate_proto_rawDescGZIP(), []int{1}
}

func (x *TemplateEarring) GetLeft() *EarringSettingSide {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *TemplateEarring) GetRight() *EarringSettingSide {
	if x != nil {
		return x.Right
	}
	return nil
}

type EarringSettingSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings        []*EarringSetting `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty"`
	OverAllPosition *Common.Vector    `protobuf:"bytes,2,opt,name=over_all_position,json=overAllPosition,proto3" json:"over_all_position,omitempty"`
	OverAllRotation *Common.Vector    `protobuf:"bytes,3,opt,name=over_all_rotation,json=overAllRotation,proto3" json:"over_all_rotation,omitempty"`
	OverAllScale    *Common.Vector    `protobuf:"bytes,4,opt,name=over_all_scale,json=overAllScale,proto3" json:"over_all_scale,omitempty"`
}

func (x *EarringSettingSide) Reset() {
	*x = EarringSettingSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContentTemplate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarringSettingSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarringSettingSide) ProtoMessage() {}

func (x *EarringSettingSide) ProtoReflect() protoreflect.Message {
	mi := &file_ArContentTemplate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarringSettingSide.ProtoReflect.Descriptor instead.
func (*EarringSettingSide) Descriptor() ([]byte, []int) {
	return file_ArContentTemplate_proto_rawDescGZIP(), []int{2}
}

func (x *EarringSettingSide) GetSettings() []*EarringSetting {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *EarringSettingSide) GetOverAllPosition() *Common.Vector {
	if x != nil {
		return x.OverAllPosition
	}
	return nil
}

func (x *EarringSettingSide) GetOverAllRotation() *Common.Vector {
	if x != nil {
		return x.OverAllRotation
	}
	return nil
}

func (x *EarringSettingSide) GetOverAllScale() *Common.Vector {
	if x != nil {
		return x.OverAllScale
	}
	return nil
}

type EarringSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Setting  *ObjectSetting            `protobuf:"bytes,1,opt,name=setting,proto3" json:"setting,omitempty"`
	Location EarringObjectLocationEnum `protobuf:"varint,2,opt,name=location,proto3,enum=ArContentTemplate.EarringObjectLocationEnum" json:"location,omitempty"`
}

func (x *EarringSetting) Reset() {
	*x = EarringSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContentTemplate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarringSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarringSetting) ProtoMessage() {}

func (x *EarringSetting) ProtoReflect() protoreflect.Message {
	mi := &file_ArContentTemplate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarringSetting.ProtoReflect.Descriptor instead.
func (*EarringSetting) Descriptor() ([]byte, []int) {
	return file_ArContentTemplate_proto_rawDescGZIP(), []int{3}
}

func (x *EarringSetting) GetSetting() *ObjectSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *EarringSetting) GetLocation() EarringObjectLocationEnum {
	if x != nil {
		return x.Location
	}
	return EarringObjectLocationEnum_EARRING_NONE
}

type TemplateGlasses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings        []*GlassesSetting `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty"`
	OverAllPosition *Common.Vector    `protobuf:"bytes,2,opt,name=over_all_position,json=overAllPosition,proto3" json:"over_all_position,omitempty"`
	OverAllRotation *Common.Vector    `protobuf:"bytes,3,opt,name=over_all_rotation,json=overAllRotation,proto3" json:"over_all_rotation,omitempty"`
	OverAllScale    *Common.Vector    `protobuf:"bytes,4,opt,name=over_all_scale,json=overAllScale,proto3" json:"over_all_scale,omitempty"`
}

func (x *TemplateGlasses) Reset() {
	*x = TemplateGlasses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContentTemplate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateGlasses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateGlasses) ProtoMessage() {}

func (x *TemplateGlasses) ProtoReflect() protoreflect.Message {
	mi := &file_ArContentTemplate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateGlasses.ProtoReflect.Descriptor instead.
func (*TemplateGlasses) Descriptor() ([]byte, []int) {
	return file_ArContentTemplate_proto_rawDescGZIP(), []int{4}
}

func (x *TemplateGlasses) GetSettings() []*GlassesSetting {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *TemplateGlasses) GetOverAllPosition() *Common.Vector {
	if x != nil {
		return x.OverAllPosition
	}
	return nil
}

func (x *TemplateGlasses) GetOverAllRotation() *Common.Vector {
	if x != nil {
		return x.OverAllRotation
	}
	return nil
}

func (x *TemplateGlasses) GetOverAllScale() *Common.Vector {
	if x != nil {
		return x.OverAllScale
	}
	return nil
}

type GlassesSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Setting  *ObjectSetting            `protobuf:"bytes,1,opt,name=setting,proto3" json:"setting,omitempty"`
	Location GlassesObjectLocationEnum `protobuf:"varint,2,opt,name=location,proto3,enum=ArContentTemplate.GlassesObjectLocationEnum" json:"location,omitempty"`
}

func (x *GlassesSetting) Reset() {
	*x = GlassesSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContentTemplate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlassesSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlassesSetting) ProtoMessage() {}

func (x *GlassesSetting) ProtoReflect() protoreflect.Message {
	mi := &file_ArContentTemplate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlassesSetting.ProtoReflect.Descriptor instead.
func (*GlassesSetting) Descriptor() ([]byte, []int) {
	return file_ArContentTemplate_proto_rawDescGZIP(), []int{5}
}

func (x *GlassesSetting) GetSetting() *ObjectSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *GlassesSetting) GetLocation() GlassesObjectLocationEnum {
	if x != nil {
		return x.Location
	}
	return GlassesObjectLocationEnum_GLASSES_NONE
}

type TemplateContactLenses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImagePath       string            `protobuf:"bytes,1,opt,name=image_path,json=imagePath,proto3" json:"image_path,omitempty"`
	ImageName       string            `protobuf:"bytes,2,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	ColorCode       string            `protobuf:"bytes,3,opt,name=color_code,json=colorCode,proto3" json:"color_code,omitempty"`
	Left            *Common.Transform `protobuf:"bytes,4,opt,name=left,proto3" json:"left,omitempty"`
	Right           *Common.Transform `protobuf:"bytes,5,opt,name=right,proto3" json:"right,omitempty"`
	Radius          string            `protobuf:"bytes,6,opt,name=radius,proto3" json:"radius,omitempty"`
	ImageUploadName *string           `protobuf:"bytes,7,opt,name=image_upload_name,json=imageUploadName,proto3,oneof" json:"image_upload_name,omitempty"`
}

func (x *TemplateContactLenses) Reset() {
	*x = TemplateContactLenses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContentTemplate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateContactLenses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateContactLenses) ProtoMessage() {}

func (x *TemplateContactLenses) ProtoReflect() protoreflect.Message {
	mi := &file_ArContentTemplate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateContactLenses.ProtoReflect.Descriptor instead.
func (*TemplateContactLenses) Descriptor() ([]byte, []int) {
	return file_ArContentTemplate_proto_rawDescGZIP(), []int{6}
}

func (x *TemplateContactLenses) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *TemplateContactLenses) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *TemplateContactLenses) GetColorCode() string {
	if x != nil {
		return x.ColorCode
	}
	return ""
}

func (x *TemplateContactLenses) GetLeft() *Common.Transform {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *TemplateContactLenses) GetRight() *Common.Transform {
	if x != nil {
		return x.Right
	}
	return nil
}

func (x *TemplateContactLenses) GetRadius() string {
	if x != nil {
		return x.Radius
	}
	return ""
}

func (x *TemplateContactLenses) GetImageUploadName() string {
	if x != nil && x.ImageUploadName != nil {
		return *x.ImageUploadName
	}
	return ""
}

type TemplateHair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColorCode     string `protobuf:"bytes,1,opt,name=color_code,json=colorCode,proto3" json:"color_code,omitempty"`
	AlphaSoftness string `protobuf:"bytes,2,opt,name=alpha_softness,json=alphaSoftness,proto3" json:"alpha_softness,omitempty"`
	AlphaFeather  string `protobuf:"bytes,3,opt,name=alpha_feather,json=alphaFeather,proto3" json:"alpha_feather,omitempty"`
}

func (x *TemplateHair) Reset() {
	*x = TemplateHair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ArContentTemplate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateHair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateHair) ProtoMessage() {}

func (x *TemplateHair) ProtoReflect() protoreflect.Message {
	mi := &file_ArContentTemplate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateHair.ProtoReflect.Descriptor instead.
func (*TemplateHair) Descriptor() ([]byte, []int) {
	return file_ArContentTemplate_proto_rawDescGZIP(), []int{7}
}

func (x *TemplateHair) GetColorCode() string {
	if x != nil {
		return x.ColorCode
	}
	return ""
}

func (x *TemplateHair) GetAlphaSoftness() string {
	if x != nil {
		return x.AlphaSoftness
	}
	return ""
}

func (x *TemplateHair) GetAlphaFeather() string {
	if x != nil {
		return x.AlphaFeather
	}
	return ""
}

var File_ArContentTemplate_proto protoreflect.FileDescriptor

var file_ArContentTemplate_proto_rawDesc = []byte{
	0x0a, 0x17, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x41, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x0c, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf7, 0x01, 0x0a, 0x0d, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x45, 0x61, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x61, 0x72, 0x72, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x6c,
	0x65, 0x66, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x61, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x64, 0x65, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x81, 0x02, 0x0a, 0x12, 0x45, 0x61, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x61,
	0x72, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x11, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x61,
	0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x11, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0f, 0x6f,
	0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x0e, 0x45, 0x61, 0x72, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x61, 0x72, 0x72, 0x69, 0x6e,
	0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfe, 0x01,
	0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x3a, 0x0a, 0x11, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0f, 0x6f, 0x76, 0x65,
	0x72, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x11,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0e, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x96,
	0x01, 0x0a, 0x0e, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2c, 0x2e, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x02, 0x0a, 0x15, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x65, 0x6e, 0x73, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25,
	0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52,
	0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x79, 0x0a,
	0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x61, 0x69, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x6f, 0x66, 0x74, 0x6e,
	0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x66, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x46, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2a, 0x67, 0x0a, 0x19, 0x45, 0x61, 0x72, 0x72,
	0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x41, 0x52, 0x52, 0x49, 0x4e, 0x47,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x41, 0x52, 0x52, 0x49,
	0x4e, 0x47, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x41,
	0x52, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x45, 0x41, 0x52, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x48, 0x49, 0x52, 0x44, 0x10,
	0x03, 0x2a, 0x65, 0x0a, 0x19, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x10,
	0x0a, 0x0c, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x45, 0x53, 0x5f, 0x52, 0x49, 0x47, 0x48,
	0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x45, 0x53, 0x5f, 0x46,
	0x52, 0x4f, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x4c, 0x41, 0x53, 0x53, 0x45,
	0x53, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x03, 0x42, 0x28, 0x5a, 0x26, 0x4d, 0x45, 0x54, 0x41,
	0x52, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x41, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ArContentTemplate_proto_rawDescOnce sync.Once
	file_ArContentTemplate_proto_rawDescData = file_ArContentTemplate_proto_rawDesc
)

func file_ArContentTemplate_proto_rawDescGZIP() []byte {
	file_ArContentTemplate_proto_rawDescOnce.Do(func() {
		file_ArContentTemplate_proto_rawDescData = protoimpl.X.CompressGZIP(file_ArContentTemplate_proto_rawDescData)
	})
	return file_ArContentTemplate_proto_rawDescData
}

var file_ArContentTemplate_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ArContentTemplate_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_ArContentTemplate_proto_goTypes = []interface{}{
	(EarringObjectLocationEnum)(0), // 0: ArContentTemplate.EarringObjectLocationEnum
	(GlassesObjectLocationEnum)(0), // 1: ArContentTemplate.GlassesObjectLocationEnum
	(*ObjectSetting)(nil),          // 2: ArContentTemplate.ObjectSetting
	(*TemplateEarring)(nil),        // 3: ArContentTemplate.TemplateEarring
	(*EarringSettingSide)(nil),     // 4: ArContentTemplate.EarringSettingSide
	(*EarringSetting)(nil),         // 5: ArContentTemplate.EarringSetting
	(*TemplateGlasses)(nil),        // 6: ArContentTemplate.TemplateGlasses
	(*GlassesSetting)(nil),         // 7: ArContentTemplate.GlassesSetting
	(*TemplateContactLenses)(nil),  // 8: ArContentTemplate.TemplateContactLenses
	(*TemplateHair)(nil),           // 9: ArContentTemplate.TemplateHair
	(*Common.Vector)(nil),          // 10: Common.Vector
	(*Common.Transform)(nil),       // 11: Common.Transform
}
var file_ArContentTemplate_proto_depIdxs = []int32{
	10, // 0: ArContentTemplate.ObjectSetting.position:type_name -> Common.Vector
	10, // 1: ArContentTemplate.ObjectSetting.rotation:type_name -> Common.Vector
	10, // 2: ArContentTemplate.ObjectSetting.scale:type_name -> Common.Vector
	4,  // 3: ArContentTemplate.TemplateEarring.left:type_name -> ArContentTemplate.EarringSettingSide
	4,  // 4: ArContentTemplate.TemplateEarring.right:type_name -> ArContentTemplate.EarringSettingSide
	5,  // 5: ArContentTemplate.EarringSettingSide.settings:type_name -> ArContentTemplate.EarringSetting
	10, // 6: ArContentTemplate.EarringSettingSide.over_all_position:type_name -> Common.Vector
	10, // 7: ArContentTemplate.EarringSettingSide.over_all_rotation:type_name -> Common.Vector
	10, // 8: ArContentTemplate.EarringSettingSide.over_all_scale:type_name -> Common.Vector
	2,  // 9: ArContentTemplate.EarringSetting.setting:type_name -> ArContentTemplate.ObjectSetting
	0,  // 10: ArContentTemplate.EarringSetting.location:type_name -> ArContentTemplate.EarringObjectLocationEnum
	7,  // 11: ArContentTemplate.TemplateGlasses.settings:type_name -> ArContentTemplate.GlassesSetting
	10, // 12: ArContentTemplate.TemplateGlasses.over_all_position:type_name -> Common.Vector
	10, // 13: ArContentTemplate.TemplateGlasses.over_all_rotation:type_name -> Common.Vector
	10, // 14: ArContentTemplate.TemplateGlasses.over_all_scale:type_name -> Common.Vector
	2,  // 15: ArContentTemplate.GlassesSetting.setting:type_name -> ArContentTemplate.ObjectSetting
	1,  // 16: ArContentTemplate.GlassesSetting.location:type_name -> ArContentTemplate.GlassesObjectLocationEnum
	11, // 17: ArContentTemplate.TemplateContactLenses.left:type_name -> Common.Transform
	11, // 18: ArContentTemplate.TemplateContactLenses.right:type_name -> Common.Transform
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_ArContentTemplate_proto_init() }
func file_ArContentTemplate_proto_init() {
	if File_ArContentTemplate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ArContentTemplate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContentTemplate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateEarring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContentTemplate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarringSettingSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContentTemplate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarringSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContentTemplate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateGlasses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContentTemplate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlassesSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContentTemplate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateContactLenses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ArContentTemplate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateHair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ArContentTemplate_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ArContentTemplate_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ArContentTemplate_proto_goTypes,
		DependencyIndexes: file_ArContentTemplate_proto_depIdxs,
		EnumInfos:         file_ArContentTemplate_proto_enumTypes,
		MessageInfos:      file_ArContentTemplate_proto_msgTypes,
	}.Build()
	File_ArContentTemplate_proto = out.File
	file_ArContentTemplate_proto_rawDesc = nil
	file_ArContentTemplate_proto_goTypes = nil
	file_ArContentTemplate_proto_depIdxs = nil
}
